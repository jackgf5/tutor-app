// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  pricing       Int       @default(0)
  subjects      String[]
  role          Role      @default(STUDENT)
  accounts      Account[]
  sessions      Session[]
  lessonTeacher Lesson[]  @relation(name: "LessonTeacher")
  lessonStudent Lesson[]  @relation(name: "LessonStudent")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Lesson {
  id        String   @id @default(cuid())
  teacher   User     @relation(name: "LessonTeacher", fields: [teacherId], references: [id], onDelete: Cascade)
  teacherId String
  student   User     @relation(name: "LessonStudent", fields: [studentId], references: [id], onDelete: Cascade)
  studentId String
  startTime DateTime
  endTime   DateTime
  date      DateTime
  confirmed Boolean  @default(false)
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}
